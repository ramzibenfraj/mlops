name: CI/CD Pipeline for ML Model

on:
  push:
    branches:
      - main
    paths:
      - '**.py'
      - 'data/**'
  pull_request:
    branches:
      - main

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: Set permissions for mlruns
    - name: Set permissions for mlruns
      run: |
        mkdir -p ./mlruns
        chmod -R 777 ./mlruns

    # Step 5: Run the ML pipeline
    - name: Run ML pipeline
      run: python pipeline.py

    # Step 6: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 7: Build Docker image
    - name: Build Docker image
      run: docker build -t rbenfraj46/insurance_model:latest .

    # Step 8: Push Docker image to Docker Hub
    - name: Push Docker image to Docker Hub
      run: docker push rbenfraj46/insurance_model:latest

    # Step 9: Authenticate with GCP
    - name: Authenticate with GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
    # Step 10: Install gke-gcloud-auth-plugin
    - name: Install gke-gcloud-auth-plugin
      run: |
        sudo apt-get update
        sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

    # Step 11: Configure GKE cluster
    - name: Configure GKE Cluster
      run: |
        gcloud config set project seventh-acrobat-440108-a9
        gcloud container clusters get-credentials mlops --zone us-central1

    # Step 12: Deploy to Kubernetes
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f deployement.yaml
        kubectl apply -f service.yml

    # Step 13: Verify deployment
    - name: Verify deployment
      run: kubectl get pods && kubectl get services
